import smtplib
import email.message
import random
from email.mime.text import MIMEText
from django.db import connection

# GENERATE AN OTP
def generate_otp():
    # Generate a random 6-digit OTP
    return ''.join([str(random.randint(0, 9)) for _ in range(6)])

# CHECK IF AN OCCURRENCE EXISTS AND DELETE IT
def delete_existing_record(email):
    try:
        with connection.cursor() as cursor:
            delete_query = "DELETE FROM otp WHERE email = %s ;"
            cursor.execute(delete_query, [email])
            connection.commit()
    except Exception as e:
        # Handle any database integrity errors or validation errors
        print(f"An error occurred during deletion: {e}")

# ADD OCCURRENCE TO THE TABLE
def add_to_table(email, otp):
    try:
        with connection.cursor() as cursor:
            insert_query = "INSERT INTO otp (email, otp) VALUES (%s, %s);"
            cursor.execute(insert_query, [email, otp])
            connection.commit()
    except Exception as e:
        # Handle any database integrity errors or validation errors
        print(f"An error occurred during insertion: {e}")

# SEND AN OTP
def send_otp(to_email):
    username = "verifier@azorshare.xyz"
    password = "123456789"

    # Delete existing record if it exists
    delete_existing_record(to_email)

    # Set up the SMTP connection
    smtp_server = "mail.azorshare.xyz"
    smtp_port = 587
    smtp_username = "verifier@azorshare.xyz"
    smtp_password = "123456789"

    server = smtplib.SMTP(smtp_server, smtp_port)
    server.starttls()
    server.login(smtp_username, smtp_password)

    # Generate OTP
    otp = generate_otp()

    # Add the email and OTP to the table
    add_to_table(to_email, otp)

    # Compose the email message
    message = email.message.EmailMessage()
    html_content = f"""
    <html>
    <head>
        <style>
            body {{
                font-family: 'Arial', sans-serif;
                background-color: #f2f2f2;
            }}
            .container {{
                width: 50%;
                margin: auto;
                background-color: #fff;
                padding: 20px;
                border-radius: 10px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }}
            h1 {{
                color: #3498db;
            }}
            .otp {{
                font-size: 24px;
                color: #2ecc71;
            }}
            p {{
                color: #555;
            }}
        </style>
    </head>
    <body>
        <div class="container">
            <h1>OTP Verification</h1>
            <p>Your One-Time Password (OTP) is:</p>
            <p class="otp">{otp}</p>
            <p>Please use this code to complete the verification process.</p>
            <p>This email is autogenerated. Do not reply.</p>
			<a href="https://imgbb.com/"><img src="https://i.ibb.co/3cc6Q8x/ic-banner-foreground.png" alt="ic-banner-foreground" border="0"></a>
        </div>
    </body>
    </html>
    """
    message.attach(MIMEText(html_content, 'html'))
    message = MIMEText(html_content, 'html')
    message["Subject"] = "OTP Verification"
    message["From"] = smtp_username
    message["To"] = to_email

    # Send the email
    server.send_message(message)

    # Close the SMTP connection
    server.quit()

    return otp
    
def verifyotp(email, otp):
    try:
        with connection.cursor() as cursor:
            # Check if the email and OTP were in the table
            select_query = "SELECT * FROM otp WHERE email = %s AND otp = %s;"
            cursor.execute(select_query, [email, otp])
            result = cursor.fetchall()

            # Delete the entry
            delete_query = "DELETE FROM otp WHERE email = %s AND otp = %s;"
            cursor.execute(delete_query, [email, otp])
            connection.commit()

            # Check if the entry was found and deleted
            if result:
                return True
            else:
                return False
    except Exception as e:
        # Handle any database integrity errors or validation errors
        print(f"An error occurred during verification: {e}")
        return False
